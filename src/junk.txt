

import React, {useEffect, useState} from "react";
import "./App.css";
//import Form from "./app_component/form.component";
import Weather from "./weather.component";
import "bootstrap/dist/css/bootstrap.min.css";

// git project https://github.com/erikflowers/weather-icons
import "weather-icons/css/weather-icons.css";

state = {
  city: '',
  icon: '',
  main: '',
  celsius: '',
  temp_max: null,
  temp_min: null,
  description: "",
  error: false,
  weatherIcon : {
    Thunderstorm: "wi-thunderstorm",
    Drizzle: "wi-sleet",
    Rain: "wi-storm-showers",
    Snow: "wi-snow",
    Atmosphere: "wi-fog",
    Clear: "wi-day-sunny",
    Clouds: "wi-day-fog"
  }
};

function get_WeatherIcon(icons, rangeId) {
  switch (true) {
    case rangeId >= 200 && rangeId < 232:
      this.setState({ icon: icons.Thunderstorm });
      break;
    case rangeId >= 300 && rangeId <= 321:
      this.setState({ icon: icons.Drizzle });
      break;
    case rangeId >= 500 && rangeId <= 521:
      this.setState({ icon: icons.Rain });
      break;
    case rangeId >= 600 && rangeId <= 622:
      this.setState({ icon: icons.Snow });
      break;
    case rangeId >= 701 && rangeId <= 781:
      this.setState({ icon: icons.Atmosphere });
      break;
    case rangeId === 800:
      this.setState({ icon: icons.Clear });
      break;
    case rangeId >= 801 && rangeId <= 804:
      this.setState({ icon: icons.Clouds });
      break;
    default:
      this.setState({ icon: icons.Clouds });
  }
}

function calCelsius(temp) {
  let cell = Math.floor(temp - 273.15);
  return cell;
}

function getWeather () {
    
  return fetch(
    'http://api.openweathermap.org/data/2.5/weather?q=Toronto&appid=4130598e3cf6e50c831c1f7c8858fdd1'
  );

};

export default function App(){

  const [isLoading, setIsLoading] = useState(true);
  const [data, setData] = useState([]);
  const [isError, setIsError] = useState(false);
  //const [temp, setTemp] = useState(-1);

  useEffect(
    ()=>{
      getWeather ()
      .then((response)=>response.json())
      .then((json)=>{setData(json); setIsError(false);})
      .catch((err)=>{setIsError(true); console.error(err); setData([]);})
      .finally(()=>setIsLoading(false))
    }, []
  );

  get_WeatherIcon();
  calCelsius();

  this.setState({
    city: 'Toronto',
    main: response.weather[0].main,
    celsius: this.calCelsius(response.main.temp),
    temp_max: this.calCelsius(response.main.temp_max),
    temp_min: this.calCelsius(response.main.temp_min),
    description: response.weather[0].description,
    error: false
  });

  // seting icons
  this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);

  console.log(response);

  return (
    <div className="App">
      <Weather
        cityname={this.state.city}
        weatherIcon={this.state.icon}
        temp_celsius={this.state.celsius}
        temp_max={this.state.temp_max}
        temp_min={this.state.temp_min}
        description={this.state.description}
      />
    </div>
  );

}

